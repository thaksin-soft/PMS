<?php

namespace App\Http\Controllers;

use App\Models\PurchasingInventory;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Config;
use Phattarachai\LineNotify\Facade\Line;


class UploadPurchaseController extends Controller
{
    public function load_data(Request $request)
    {

        $base = $request->session()->get('choose-base');

        if ($base == 'pp') {
            $db = Config::get('dbcon.ppdb');
        } else {
            $db = Config::get('dbcon.odiendb');
        }
        $purchasing = PurchasingInventory::join('crm_employee', 'crm_employee.id', 'ic_purchasing_inventory.creater')
            ->where('ic_purchasing_inventory.ch_status', 4)
            ->where('ic_purchasing_inventory.base', $base)
            ->select('ic_purchasing_inventory.doc_no', 'ic_purchasing_inventory.creater', 'crm_employee.emp_name', 'crm_employee.code_fb')
            ->get();
            $product_data = array();
            $ip = Config::get('dbcon.ip_local');
            foreach ($purchasing as $key => $value) {
                $product = DB::select("SELECT t1.doc_no, t1.code, t1.name_1,t1.name_eng_1,t1.ic_branch_code,t1.unit_standard, t2.name_1 AS ph1, t3.name_1 AS ph2, t4.name_1 AS ph3, t5.name_1 AS ph4, t6.name_1 AS ph5 , t7.name_1 AS ph6, t8.name_1 AS ph7, t9.name_1 AS ph8 FROM ic_inventory AS t1,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_group') AS t1(code text, name_1  text) ) AS t2,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_group_sub') AS t1(code text, name_1  text) ) AS t3,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_group_sub2') AS t1(code text, name_1  text) ) AS t4,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_category') AS t1(code text, name_1  text) ) AS t5,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_brand') AS t1(code text, name_1  text) ) AS t6,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_pattern') AS t1(code text, name_1  text) ) AS t7,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_size') AS t1(code text, name_1  text) ) AS t8,
                (SELECT * FROM dblink('host = ". $ip ." user = postgres password = sml dbname= ". $db ."', 'SELECT code, name_1 FROM ic_design') AS t1(code text, name_1  text) ) AS t9
                WHERE t1.group_main = t2.code AND t1.group_sub = t3.code AND t1.group_sub2 = t4.code AND t1.item_category = t5.code AND
                t1.item_brand = t6.code AND t1.item_pattern = t7.code AND t1.item_size = t8.code AND t1.item_design = t9.code AND t1.doc_no = ? ORDER BY code ASC", [$value->doc_no]);
                $product_data[] = $product;
            }
        return response()->json(['purchasing'=>$purchasing,'product_data'=>$product_data]);
    }

    public function upload_data(Request $request)
    {
        $doc_no = $request->doc_no;

        $base = $request->session()->get('choose-base');
        if ($base == 'pp') {
            $manufacturer_code = 'pp';
        } else {
            $manufacturer_code = 'odien';
        }

        $load_data = DB::select("SELECT t1.ignore_sync, t1.is_lock_record, t1.roworder, t1.code, t1.code_old, t1.name_1, t1.name_2, t1.name_eng_1, t1.name_eng_2, t1.name_market,
        t1.name_for_bill, t1.short_name, t1.name_for_pos, t1.name_for_search, t1.item_type, t1.item_category, t1.group_main, t1.item_brand,
        t1.item_pattern, t1.item_design, t1.item_grade, t1.item_class, t1.item_size, t1.item_color, t1.item_character, t1.item_status,
        t1.unit_type, t1.cost_type, t1.tax_type, t1.item_sale_type, t1.item_rent_type, t1.unit_standard, t1.unit_cost, t1.income_type,
        t1.description, t1.item_model, t1.ic_serial_no, t1.remark, t1.status, t1.guid_code, t1.last_movement_date, t1.average_cost,
        t1.item_in_stock, t1.balance_qty, t1.accrued_in_qty, t1.accrued_out_qty, t1.unit_standard_name, t1.update_price, t1.update_detail,
        t1.account_code_1, t1.account_code_2, t1.account_code_3, t1.account_code_4, t1.book_out_qty, t1.doc_format_code, t1.unit_standard_stand_value,
        t1.unit_standard_divide_value, t1.sign_code, t1.supplier_code, t1.fixed_cost, t1.drink_type, t1.average_cost_1, t1.group_sub,
        t1.use_expire, t1.barcode_checker_print, t1.print_order_per_unit, t1.production_period, t1.is_new_item, t1.commission_rate, t1.is_eordershow,
        t1.no_discount, t1.serial_no_format, t1.pos_no_sum, t1.item_promote, t1.sum_sale_1, t1.is_speech, t1.medicine_register_number,
        t1.medicine_standard_code, t1.quantity, t1.degree, t1.is_product_boonrawd, t1.tpu_code, t1.gpu_code, t1.group_sub2, t1.create_date_time_now,
        t1.ic_discount_group, t1.name_from_remark,(select base from ic_purchasing_inventory where doc_no = t1.doc_no) as manufacturer_code, t1.create_datetime, t1.last_update_date_time, t1.create_code,
        t1.last_update_code, t1.have_take_away, t1.currency_code, t1.topping_product, t1.product_age, t1.qty_per_pallet, t1.qc_product,
        t1.qc_product_retest_day, t1.doc_no, t1.pi_no, t1.models,

        t2.ic_code, t2.formular, t2.po_over, t2.so_over, t2.account_group, t2.serial_number, t2.tax_import,
        t2.tax_rate, t2.purchase_manager, t2.sale_manager, t2.start_purchase_wh, t2.start_purchase_shelf,
        t2.start_purchase_unit, t2.start_sale_wh, t2.start_sale_shelf, t2.start_sale_unit, t2.cost_produce,
        t2.cost_standard, t2.unit_for_stock, t2.ic_out_wh, t2.ic_out_shelf, t2.ic_reserve_wh, t2.reserve_status,
        t2.discount, t2.purchase_point, t2.unit_2_code, t2.unit_2_qty, t2.unit_2_average, t2.unit_2_average_value,
        t2.user_group_for_purchase, t2.user_group_for_sale, t2.user_group_for_manage, t2.user_group_for_warehouse,
        t2.user_status, t2.close_reason, t2.close_date, t2.ref_file_1, t2.ref_file_2, t2.ref_file_3, t2.ref_file_4,
        t2.ref_file_5, t2.dimension_1, t2.dimension_2, t2.dimension_3, t2.dimension_4, t2.dimension_5, t2.dimension_6,
        t2.dimension_7, t2.dimension_8, t2.dimension_9, t2.dimension_10, t2.sale_price_1, t2.sale_price_2, t2.sale_price_3,
        t2.sale_price_4, t2.maximum_qty, t2.minimum_qty, t2.dimension_11, t2.dimension_12, t2.dimension_13, t2.dimension_14,
        t2.dimension_15, t2.dimension_16, t2.dimension_17, t2.dimension_18, t2.dimension_19, t2.dimension_20, t2.accrued_control,
        t2.lock_price, t2.lock_discount, t2.lock_cost, t2.is_end, t2.is_hold_purchase, t2.is_hold_sale, t2.is_stop, t2.balance_control,
        t2.have_point, t2.start_unit_code, t2.dimension_21, t2.dimension_22, t2.dimension_23, t2.dimension_24, t2.dimension_25,
        t2.is_premium, t2.dimension_26, t2.dimension_27, t2.dimension_28, t2.dimension_29, t2.dimension_30, t2.dimension_31,
        t2.dimension_32, t2.dimension_33, t2.dimension_34, t2.dimension_35, t2.dimension_36, t2.dimension_37, t2.dimension_38,
        t2.dimension_39, t2.dimension_40, t2.dimension_41, t2.dimension_42, t2.dimension_43, t2.dimension_44, t2.dimension_45,
        t2.create_date_time_now, t2.before_sale_unit,t1.ic_branch_code FROM public.ic_inventory AS t1 , ic_inventory_detail AS t2
            WHERE t1.pi_no = t2.pi_no AND t1.doc_no = ?", [$doc_no]);

        // foreach ($load_data as $key => $value) {
        //     $ignore_sync = $value->ignore_sync; $is_lock_record = $value->is_lock_record; $code = $value->code; $code_old = $value->code_old; $name_1 = $value->name_1; $name_2 = $value->name_2; $name_eng_1 = $value->name_eng_1; $name_eng_2 = $value->name_eng_2; $name_market = $value->name_market; $name_for_bill = $value->name_for_bill; $short_name = $value->short_name; $name_for_pos = $value->name_for_pos; $name_for_search = $value->name_for_search; $item_type = $value->item_type; $item_category = $value->item_category; $group_main = $value->group_main; $item_brand = $value->item_brand; $item_pattern = $value->item_pattern; $item_design = $value->item_design; $item_grade = $value->item_grade; $item_class = $value->item_class; $item_size = $value->item_size; $item_color = $value->item_color; $item_character = $value->item_character; $item_status = $value->item_status; $unit_type = $value->unit_type; $cost_type = $value->cost_type; $tax_type = $value->tax_type; $item_sale_type = $value->item_sale_type; $item_rent_type = $value->item_rent_type; $unit_standard = $value->unit_standard; $unit_cost = $value->unit_cost; $income_type = $value->income_type; $description = $value->description; $item_model = $value->item_model; $ic_serial_no = $value->ic_serial_no; $remark = $value->remark; $status = $value->status; $guid_code = $value->guid_code; $last_movement_date = $value->last_movement_date; $average_cost = $value->average_cost; $item_in_stock = $value->item_in_stock; $balance_qty = $value->balance_qty; $accrued_in_qty = $value->accrued_in_qty; $accrued_out_qty = $value->accrued_out_qty; $unit_standard_name = $value->unit_standard_name; $update_price = $value->update_price; $update_detail = $value->update_detail; $account_code_1 = $value->account_code_1; $account_code_2 = $value->account_code_2; $account_code_3 = $value->account_code_3; $account_code_4 = $value->account_code_4; $book_out_qty = $value->book_out_qty; $doc_format_code = $value->doc_format_code; $unit_standard_stand_value = $value->unit_standard_stand_value; $unit_standard_divide_value = $value->unit_standard_divide_value; $sign_code = $value->sign_code; $supplier_code = $value->supplier_code; $fixed_cost = $value->fixed_cost; $drink_type = $value->drink_type; $average_cost_1 = $value->average_cost_1; $group_sub = $value->group_sub; $use_expire = $value->use_expire; $barcode_checker_print = $value->barcode_checker_print; $print_order_per_unit = $value->print_order_per_unit; $production_period = $value->production_period; $is_new_item = $value->is_new_item; $commission_rate = $value->commission_rate; $is_eordershow = $value->is_eordershow; $no_discount = $value->no_discount; $serial_no_format = $value->serial_no_format; $pos_no_sum = $value->pos_no_sum; $item_promote = $value->item_promote; $sum_sale_1 = $value->sum_sale_1; $is_speech = $value->is_speech; $medicine_register_number = $value->medicine_register_number; $medicine_standard_code = $value->medicine_standard_code; $quantity = $value->quantity; $degree = $value->degree; $is_product_boonrawd = $value->is_product_boonrawd; $tpu_code = $value->tpu_code; $gpu_code = $value->gpu_code; $group_sub2 = $value->group_sub2; $ic_discount_group = $value->ic_discount_group; $name_from_remark = $value->name_from_remark; $manufacturer_code = $manufacturer_code; $create_datetime = $value->create_datetime; $last_update_date_time = $value->last_update_date_time; $create_code = $value->create_code; $last_update_code = $value->last_update_code; $have_take_away = $value->have_take_away; $create_date_time_now = date('Y-m-d H:i:s'); $topping_product = $value->topping_product; $product_age = $value->product_age; $qty_per_pallet = $value->qty_per_pallet; $qc_product = $value->qc_product; $qc_product_retest_day = $value->qc_product_retest_day;
        //     $ic_code = $value->ic_code; $formular = $value->formular; $po_over = $value->po_over; $so_over = $value->so_over; $account_group = $value->account_group; $serial_number = $value->serial_number; $tax_import = $value->tax_import; $tax_rate = $value->tax_rate; $purchase_manager = $value->purchase_manager; $sale_manager = $value->sale_manager; $start_purchase_wh = $value->start_purchase_wh; $start_purchase_shelf = $value->start_purchase_shelf; $start_purchase_unit = $value->start_purchase_unit; $start_sale_wh = $value->start_sale_wh; $start_sale_shelf = $value->start_sale_shelf; $start_sale_unit = $value->start_sale_unit; $cost_produce = $value->cost_produce; $cost_standard = $value->cost_standard; $unit_for_stock = $value->unit_for_stock; $ic_out_wh = $value->ic_out_wh; $ic_out_shelf = $value->ic_out_shelf; $ic_reserve_wh = $value->ic_reserve_wh; $reserve_status = $value->reserve_status; $discount = $value->discount; $purchase_point = $value->purchase_point; $unit_2_code = $value->unit_2_code; $unit_2_qty = $value->unit_2_qty; $unit_2_average = $value->unit_2_average; $unit_2_average_value = $value->unit_2_average_value; $user_group_for_purchase = $value->user_group_for_purchase; $user_group_for_sale = $value->user_group_for_sale; $user_group_for_manage = $value->user_group_for_manage; $user_group_for_warehouse = $value->user_group_for_warehouse; $user_status = $value->user_status; $close_reason = $value->close_reason; $close_date = $value->close_date; $ref_file_1 = $value->ref_file_1; $ref_file_2 = $value->ref_file_2; $ref_file_3 = $value->ref_file_3; $ref_file_4 = $value->ref_file_4; $ref_file_5 = $value->ref_file_5; $dimension_1 = $value->dimension_1; $dimension_2 = $value->dimension_2; $dimension_3 = $value->dimension_3; $dimension_4 = $value->dimension_4; $dimension_5 = $value->dimension_5; $dimension_6 = $value->dimension_6; $dimension_7 = $value->dimension_7; $dimension_8 = $value->dimension_8; $dimension_9 = $value->dimension_9; $dimension_10 = $value->dimension_10; $sale_price_1 = $value->sale_price_1; $sale_price_2 = $value->sale_price_2; $sale_price_3 = $value->sale_price_3; $sale_price_4 = $value->sale_price_4; $maximum_qty = $value->maximum_qty; $minimum_qty = $value->minimum_qty; $dimension_11 = $value->dimension_11; $dimension_12 = $value->dimension_12; $dimension_13 = $value->dimension_13; $dimension_14 = $value->dimension_14; $dimension_15 = $value->dimension_15; $dimension_16 = $value->dimension_16; $dimension_17 = $value->dimension_17; $dimension_18 = $value->dimension_18; $dimension_19 = $value->dimension_19; $dimension_20 = $value->dimension_20; $accrued_control = $value->accrued_control; $lock_price = $value->lock_price; $lock_discount = $value->lock_discount; $lock_cost = $value->lock_cost; $is_end = $value->is_end; $is_hold_purchase = $value->is_hold_purchase; $is_hold_sale = $value->is_hold_sale; $is_stop = $value->is_stop; $balance_control = $value->balance_control; $have_point = $value->have_point; $start_unit_code = $value->start_unit_code; $dimension_21 = $value->dimension_21; $dimension_22 = $value->dimension_22; $dimension_23 = $value->dimension_23; $dimension_24 = $value->dimension_24; $dimension_25 = $value->dimension_25; $is_premium = $value->is_premium; $dimension_26 = $value->dimension_26; $dimension_27 = $value->dimension_27; $dimension_28 = $value->dimension_28; $dimension_29 = $value->dimension_29; $dimension_30 = $value->dimension_30; $dimension_31 = $value->dimension_31; $dimension_32 = $value->dimension_32; $dimension_33 = $value->dimension_33; $dimension_34 = $value->dimension_34; $dimension_35 = $value->dimension_35; $dimension_36 = $value->dimension_36; $dimension_37 = $value->dimension_37; $dimension_38 = $value->dimension_38; $dimension_39 = $value->dimension_39; $dimension_40 = $value->dimension_40; $dimension_41 = $value->dimension_41; $dimension_42 = $value->dimension_42; $dimension_43 = $value->dimension_43; $dimension_44 = $value->dimension_44; $dimension_45 = $value->dimension_45; $before_sale_unit = $value->before_sale_unit;

        //     $base = $request->session()->get('choose-base');
        //     if ($base == 'pp') {
        //         //ບັນທຶກ inventory
        //         $sql = "INSERT INTO public.ic_inventory(
        //             ignore_sync, is_lock_record, code, code_old, name_1, name_2, name_eng_1, name_eng_2, name_market, name_for_bill, short_name, name_for_pos, name_for_search, item_type, item_category, group_main, item_brand, item_pattern, item_design, item_grade, item_class, item_size, item_color, item_character, item_status, unit_type, cost_type, tax_type, item_sale_type, item_rent_type, unit_standard, unit_cost, income_type, description, item_model, ic_serial_no, remark, status, guid_code, last_movement_date, average_cost, item_in_stock, balance_qty, accrued_in_qty, accrued_out_qty, unit_standard_name, update_price, update_detail, account_code_1, account_code_2, account_code_3, account_code_4, book_out_qty, doc_format_code, unit_standard_stand_value, unit_standard_divide_value, sign_code, supplier_code, fixed_cost, drink_type, average_cost_1, group_sub, use_expire, barcode_checker_print, print_order_per_unit, production_period, is_new_item, commission_rate, is_eordershow, no_discount, serial_no_format, pos_no_sum, item_promote, sum_sale_1, is_speech, medicine_register_number, medicine_standard_code, quantity, degree, is_product_boonrawd, tpu_code, gpu_code, group_sub2, ic_discount_group, name_from_remark, manufacturer_code, create_datetime, last_update_date_time, create_code, last_update_code, have_take_away, create_date_time_now, topping_product, product_age, qty_per_pallet, qc_product, qc_product_retest_day)
        //             VALUES ('$ignore_sync', '$is_lock_record', '$code', null, '$name_1', '$name_2', '$name_eng_1', '$name_eng_2', '$name_market', '$name_for_bill', '$short_name', '$name_for_pos', '$name_for_search', '$item_type', '$item_category', '$group_main', '$item_brand', '$item_pattern', '$item_design', '$item_grade', '$item_class', '$item_size', '$item_color', '$item_character', '$item_status', '$unit_type', '$cost_type', '$tax_type', '$item_sale_type', '$item_rent_type', '$unit_standard', '$unit_cost', '$income_type', '$description', '$item_model', '$ic_serial_no', '$remark', '$status', '$guid_code', null, '$average_cost', '$item_in_stock', '$balance_qty', '$accrued_in_qty', '$accrued_out_qty', '$unit_standard_name', '$update_price', '$update_detail', '$account_code_1', '$account_code_2', '$account_code_3', '$account_code_4', '$book_out_qty', '$doc_format_code', '$unit_standard_stand_value', '$unit_standard_divide_value', '$sign_code', '$supplier_code', '$fixed_cost', '$drink_type', '$average_cost_1', '$group_sub', '$use_expire', '$barcode_checker_print', '$print_order_per_unit', '$production_period', '$is_new_item', '$commission_rate', '$is_eordershow', '$no_discount', '$serial_no_format', '$pos_no_sum', '$item_promote', '$sum_sale_1', '$is_speech', '$medicine_register_number', '$medicine_standard_code', '$quantity', '$degree', '$is_product_boonrawd', '$tpu_code', '$gpu_code', '$group_sub2', '$ic_discount_group', '$name_from_remark', '$manufacturer_code', null, null, '$create_code', '$last_update_code', '$have_take_away', '$create_date_time_now', '$topping_product', '$product_age', '$qty_per_pallet', '$qc_product', '$qc_product_retest_day');";
        //         $insert_inventory = DB::connection('pgsql_pp')->insert($sql);
        //         if ($insert_inventory) {
        //             //ບັນທຶກ inventory detail
        //             $sql = "INSERT INTO public.ic_inventory_detail(
        //                 ignore_sync, is_lock_record, ic_code, formular, po_over, so_over, account_group, serial_number, tax_import, tax_rate, purchase_manager, sale_manager, start_purchase_wh, start_purchase_shelf, start_purchase_unit, start_sale_wh, start_sale_shelf, start_sale_unit, cost_produce, cost_standard, unit_for_stock, ic_out_wh, ic_out_shelf, ic_reserve_wh, reserve_status, discount, purchase_point, unit_2_code, unit_2_qty, unit_2_average, unit_2_average_value, user_group_for_purchase, user_group_for_sale, user_group_for_manage, user_group_for_warehouse, user_status, close_reason, close_date, ref_file_1, ref_file_2, ref_file_3, ref_file_4, ref_file_5, dimension_1, dimension_2, dimension_3, dimension_4, dimension_5, dimension_6, dimension_7, dimension_8, dimension_9, dimension_10, sale_price_1, sale_price_2, sale_price_3, sale_price_4, maximum_qty, minimum_qty, dimension_11, dimension_12, dimension_13, dimension_14, dimension_15, dimension_16, dimension_17, dimension_18, dimension_19, dimension_20, accrued_control, lock_price, lock_discount, lock_cost, is_end, is_hold_purchase, is_hold_sale, is_stop, balance_control, have_point, start_unit_code, dimension_21, dimension_22, dimension_23, dimension_24, dimension_25, is_premium, dimension_26, dimension_27, dimension_28, dimension_29, dimension_30, dimension_31, dimension_32, dimension_33, dimension_34, dimension_35, dimension_36, dimension_37, dimension_38, dimension_39, dimension_40, dimension_41, dimension_42, dimension_43, dimension_44, dimension_45, before_sale_unit, create_date_time_now)
        //                 VALUES ('$ignore_sync', '$is_lock_record', '$ic_code', '$formular', '$po_over', '$so_over', '$account_group', '$serial_number', '$tax_import', '$tax_rate', '$purchase_manager', '$sale_manager', '$start_purchase_wh', '$start_purchase_shelf', '$start_purchase_unit', '$start_sale_wh', '$start_sale_shelf', '$start_sale_unit', '$cost_produce', '$cost_standard', '$unit_for_stock', '$ic_out_wh', '$ic_out_shelf', '$ic_reserve_wh', '$reserve_status', '$discount', '$purchase_point', '$unit_2_code', '$unit_2_qty', '$unit_2_average', '$unit_2_average_value', '$user_group_for_purchase', '$user_group_for_sale', '$user_group_for_manage', '$user_group_for_warehouse', '$user_status', '$close_reason', null, '$ref_file_1', '$ref_file_2', '$ref_file_3', '$ref_file_4', '$ref_file_5', '$dimension_1', '$dimension_2', '$dimension_3', '$dimension_4', '$dimension_5', '$dimension_6', '$dimension_7', '$dimension_8', '$dimension_9', '$dimension_10', '$sale_price_1', '$sale_price_2', '$sale_price_3', '$sale_price_4', '$maximum_qty', '$minimum_qty', '$dimension_11', '$dimension_12', '$dimension_13', '$dimension_14', '$dimension_15', '$dimension_16', '$dimension_17', '$dimension_18', '$dimension_19', '$dimension_20', '$accrued_control', '$lock_price', '$lock_discount', '$lock_cost', '$is_end', '$is_hold_purchase', '$is_hold_sale', '$is_stop', '$balance_control', '$have_point', '$start_unit_code', '$dimension_21', '$dimension_22', '$dimension_23', '$dimension_24', '$dimension_25', '$is_premium', '$dimension_26', '$dimension_27', '$dimension_28', '$dimension_29', '$dimension_30', '$dimension_31', '$dimension_32', '$dimension_33', '$dimension_34', '$dimension_35', '$dimension_36', '$dimension_37', '$dimension_38', '$dimension_39', '$dimension_40', '$dimension_41', '$dimension_42', '$dimension_43', '$dimension_44', '$dimension_45', '$before_sale_unit', '$create_date_time_now');";
        //             $insert_inventory_detail = DB::connection('pgsql_pp')->insert($sql);
        //             if ($insert_inventory_detail) {
        //                 $load_unit = DB::select("SELECT ignore_sync, is_lock_record, roworder, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now, pi_no
        //                 FROM public.ic_unit_use WHERE pi_no = ?", [$value->pi_no]);

        //                 foreach ($load_unit as $key => $unit_value) {
        //                     $ignore_sync = $unit_value->ignore_sync; $is_lock_record = $unit_value->is_lock_record; $code = $unit_value->code; $line_number = $unit_value->line_number; $stand_value = $unit_value->stand_value; $divide_value = $unit_value->divide_value; $ratio = $unit_value->ratio; $row_order = $unit_value->row_order; $width_length_height = $unit_value->width_length_height; $ic_code = $unit_value->ic_code; $remark = $unit_value->remark; $weight = $unit_value->weight; $status = $unit_value->status; $unit_size = $unit_value->unit_size;
        //                     $create_date_time_now = date('Y-m-d H:i:s');
        //                     $sql = "INSERT INTO public.ic_unit_use(
        //                         ignore_sync, is_lock_record, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now)
        //                         VALUES ('$ignore_sync', '$is_lock_record', '$code', '$line_number', '$stand_value', '$divide_value', '$ratio', '$row_order', '$width_length_height', '$ic_code', '$remark', '$weight', '$status', '$unit_size', '$create_date_time_now');";
        //                     $sql_use = DB::connection('pgsql_pp')->insert($sql);

        //                     if($sql_use){
        //                         $wh = DB::connection('pgsql_pp')->select("select code,whcode FROM ic_shelf");
        //                         foreach($wh as $key => $item){

        //                             DB::connection('pgsql_pp')->INSERT("INSERT INTO ic_wh_shelf(wh_code,shelf_code,ic_code,status)values('$item->whcode','$item->code','$unit_value->ic_code',1)");
        //                         }
        //                     }
        //                 }


        //             }
        //         }
        //     } else {
        //         //ບັນທຶກ inventory
        //         $sql = "INSERT INTO public.ic_inventory(
        //             ignore_sync, is_lock_record, code, code_old, name_1, name_2, name_eng_1, name_eng_2, name_market, name_for_bill, short_name, name_for_pos, name_for_search, item_type, item_category, group_main, item_brand, item_pattern, item_design, item_grade, item_class, item_size, item_color, item_character, item_status, unit_type, cost_type, tax_type, item_sale_type, item_rent_type, unit_standard, unit_cost, income_type, description, item_model, ic_serial_no, remark, status, guid_code, last_movement_date, average_cost, item_in_stock, balance_qty, accrued_in_qty, accrued_out_qty, unit_standard_name, update_price, update_detail, account_code_1, account_code_2, account_code_3, account_code_4, book_out_qty, doc_format_code, unit_standard_stand_value, unit_standard_divide_value, sign_code, supplier_code, fixed_cost, drink_type, average_cost_1, group_sub, use_expire, barcode_checker_print, print_order_per_unit, production_period, is_new_item, commission_rate, is_eordershow, no_discount, serial_no_format, pos_no_sum, item_promote, sum_sale_1, is_speech, medicine_register_number, medicine_standard_code, quantity, degree, is_product_boonrawd, tpu_code, gpu_code, group_sub2, ic_discount_group, name_from_remark, manufacturer_code, create_datetime, last_update_date_time, create_code, last_update_code, have_take_away, create_date_time_now, topping_product, product_age, qty_per_pallet, qc_product, qc_product_retest_day)
        //             VALUES ('$ignore_sync', '$is_lock_record', '$code', null, '$name_1', '$name_2', '$name_eng_1', '$name_eng_2', '$name_market', '$name_for_bill', '$short_name', '$name_for_pos', '$name_for_search', '$item_type', '$item_category', '$group_main', '$item_brand', '$item_pattern', '$item_design', '$item_grade', '$item_class', '$item_size', '$item_color', '$item_character', '$item_status', '$unit_type', '$cost_type', '$tax_type', '$item_sale_type', '$item_rent_type', '$unit_standard', '$unit_cost', '$income_type', '$description', '$item_model', '$ic_serial_no', '$remark', '$status', '$guid_code', null, '$average_cost', '$item_in_stock', '$balance_qty', '$accrued_in_qty', '$accrued_out_qty', '$unit_standard_name', '$update_price', '$update_detail', '$account_code_1', '$account_code_2', '$account_code_3', '$account_code_4', '$book_out_qty', '$doc_format_code', '$unit_standard_stand_value', '$unit_standard_divide_value', '$sign_code', '$supplier_code', '$fixed_cost', '$drink_type', '$average_cost_1', '$group_sub', '$use_expire', '$barcode_checker_print', '$print_order_per_unit', '$production_period', '$is_new_item', '$commission_rate', '$is_eordershow', '$no_discount', '$serial_no_format', '$pos_no_sum', '$item_promote', '$sum_sale_1', '$is_speech', '$medicine_register_number', '$medicine_standard_code', '$quantity', '$degree', '$is_product_boonrawd', '$tpu_code', '$gpu_code', '$group_sub2', '$ic_discount_group', '$name_from_remark', '$manufacturer_code', null, null, '$create_code', '$last_update_code', '$have_take_away', '$create_date_time_now', '$topping_product', '$product_age', '$qty_per_pallet', '$qc_product', '$qc_product_retest_day');";
        //         $insert_inventory = DB::connection('pgsql_od')->insert($sql);
        //         if ($insert_inventory) {
        //             //ບັນທຶກ inventory detail
        //             $sql = "INSERT INTO public.ic_inventory_detail(
        //                 ignore_sync, is_lock_record, ic_code, formular, po_over, so_over, account_group, serial_number, tax_import, tax_rate, purchase_manager, sale_manager, start_purchase_wh, start_purchase_shelf, start_purchase_unit, start_sale_wh, start_sale_shelf, start_sale_unit, cost_produce, cost_standard, unit_for_stock, ic_out_wh, ic_out_shelf, ic_reserve_wh, reserve_status, discount, purchase_point, unit_2_code, unit_2_qty, unit_2_average, unit_2_average_value, user_group_for_purchase, user_group_for_sale, user_group_for_manage, user_group_for_warehouse, user_status, close_reason, close_date, ref_file_1, ref_file_2, ref_file_3, ref_file_4, ref_file_5, dimension_1, dimension_2, dimension_3, dimension_4, dimension_5, dimension_6, dimension_7, dimension_8, dimension_9, dimension_10, sale_price_1, sale_price_2, sale_price_3, sale_price_4, maximum_qty, minimum_qty, dimension_11, dimension_12, dimension_13, dimension_14, dimension_15, dimension_16, dimension_17, dimension_18, dimension_19, dimension_20, accrued_control, lock_price, lock_discount, lock_cost, is_end, is_hold_purchase, is_hold_sale, is_stop, balance_control, have_point, start_unit_code, dimension_21, dimension_22, dimension_23, dimension_24, dimension_25, is_premium, dimension_26, dimension_27, dimension_28, dimension_29, dimension_30, dimension_31, dimension_32, dimension_33, dimension_34, dimension_35, dimension_36, dimension_37, dimension_38, dimension_39, dimension_40, dimension_41, dimension_42, dimension_43, dimension_44, dimension_45, before_sale_unit, create_date_time_now)
        //                 VALUES ('$ignore_sync', '$is_lock_record', '$ic_code', '$formular', '$po_over', '$so_over', '$account_group', '$serial_number', '$tax_import', '$tax_rate', '$purchase_manager', '$sale_manager', '$start_purchase_wh', '$start_purchase_shelf', '$start_purchase_unit', '$start_sale_wh', '$start_sale_shelf', '$start_sale_unit', '$cost_produce', '$cost_standard', '$unit_for_stock', '$ic_out_wh', '$ic_out_shelf', '$ic_reserve_wh', '$reserve_status', '$discount', '$purchase_point', '$unit_2_code', '$unit_2_qty', '$unit_2_average', '$unit_2_average_value', '$user_group_for_purchase', '$user_group_for_sale', '$user_group_for_manage', '$user_group_for_warehouse', '$user_status', '$close_reason', null, '$ref_file_1', '$ref_file_2', '$ref_file_3', '$ref_file_4', '$ref_file_5', '$dimension_1', '$dimension_2', '$dimension_3', '$dimension_4', '$dimension_5', '$dimension_6', '$dimension_7', '$dimension_8', '$dimension_9', '$dimension_10', '$sale_price_1', '$sale_price_2', '$sale_price_3', '$sale_price_4', '$maximum_qty', '$minimum_qty', '$dimension_11', '$dimension_12', '$dimension_13', '$dimension_14', '$dimension_15', '$dimension_16', '$dimension_17', '$dimension_18', '$dimension_19', '$dimension_20', '$accrued_control', '$lock_price', '$lock_discount', '$lock_cost', '$is_end', '$is_hold_purchase', '$is_hold_sale', '$is_stop', '$balance_control', '$have_point', '$start_unit_code', '$dimension_21', '$dimension_22', '$dimension_23', '$dimension_24', '$dimension_25', '$is_premium', '$dimension_26', '$dimension_27', '$dimension_28', '$dimension_29', '$dimension_30', '$dimension_31', '$dimension_32', '$dimension_33', '$dimension_34', '$dimension_35', '$dimension_36', '$dimension_37', '$dimension_38', '$dimension_39', '$dimension_40', '$dimension_41', '$dimension_42', '$dimension_43', '$dimension_44', '$dimension_45', '$before_sale_unit', '$create_date_time_now');";
        //             $insert_inventory_detail = DB::connection('pgsql_od')->insert($sql);
        //             if ($insert_inventory_detail) {
        //                 $load_unit = DB::select("SELECT ignore_sync, is_lock_record, roworder, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now, pi_no
        //                 FROM public.ic_unit_use WHERE pi_no = ?", [$value->pi_no]);

        //                 foreach ($load_unit as $key => $unit_value) {
        //                     $ignore_sync = $unit_value->ignore_sync; $is_lock_record = $unit_value->is_lock_record; $code = $unit_value->code; $line_number = $unit_value->line_number; $stand_value = $unit_value->stand_value; $divide_value = $unit_value->divide_value; $ratio = $unit_value->ratio; $row_order = $unit_value->row_order; $width_length_height = $unit_value->width_length_height; $ic_code = $unit_value->ic_code; $remark = $unit_value->remark; $weight = $unit_value->weight; $status = $unit_value->status; $unit_size = $unit_value->unit_size;
        //                     $create_date_time_now = date('Y-m-d H:i:s');
        //                     $sql = "INSERT INTO public.ic_unit_use(
        //                         ignore_sync, is_lock_record, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now)
        //                         VALUES ('$ignore_sync', '$is_lock_record', '$code', '$line_number', '$stand_value', '$divide_value', '$ratio', '$row_order', '$width_length_height', '$ic_code', '$remark', '$weight', '$status', '$unit_size', '$create_date_time_now');";
        //                    $sql_use = DB::connection('pgsql_od')->insert($sql);

        //                     if($sql_use){
        //                         $wh = DB::connection('pgsql_od')->select("select code,whcode FROM ic_shelf");
        //                         foreach($wh as $key => $item){

        //                             $sql_use = DB::connection('pgsql_od')->INSERT("INSERT INTO ic_wh_shelf(wh_code,shelf_code,ic_code,status)values('$item->whcode','$item->code','$unit_value->ic_code',1)");
        //                         }
        //                     }
        //                 }
        //             }
        //         }
        //     }

        // }

        foreach ($load_data as $key => $value) {
            $ignore_sync = $value->ignore_sync; $is_lock_record = $value->is_lock_record; $code = $value->code; $code_old = $value->code_old; $name_1 = $value->name_1; $name_2 = $value->name_2; $name_eng_1 = $value->name_eng_1; $name_eng_2 = $value->name_eng_2; $name_market = $value->name_market; $name_for_bill = $value->name_for_bill; $short_name = $value->short_name; $name_for_pos = $value->name_for_pos; $name_for_search = $value->name_for_search; $item_type = $value->item_type; $item_category = $value->item_category; $group_main = $value->group_main; $item_brand = $value->item_brand; $item_pattern = $value->item_pattern; $item_design = $value->item_design; $item_grade = $value->item_grade; $item_class = $value->item_class; $item_size = $value->item_size; $item_color = $value->item_color; $item_character = $value->item_character; $item_status = $value->item_status; $unit_type = $value->unit_type; $cost_type = $value->cost_type; $tax_type = $value->tax_type; $item_sale_type = $value->item_sale_type; $item_rent_type = $value->item_rent_type; $unit_standard = $value->unit_standard; $unit_cost = $value->unit_cost; $income_type = $value->income_type; $description = $value->description; $item_model = $value->item_model; $ic_serial_no = $value->ic_serial_no; $remark = $value->remark; $status = $value->status; $guid_code = $value->guid_code; $last_movement_date = $value->last_movement_date; $average_cost = $value->average_cost; $item_in_stock = $value->item_in_stock; $balance_qty = $value->balance_qty; $accrued_in_qty = $value->accrued_in_qty; $accrued_out_qty = $value->accrued_out_qty; $unit_standard_name = $value->unit_standard_name; $update_price = $value->update_price; $update_detail = $value->update_detail; $account_code_1 = $value->account_code_1; $account_code_2 = $value->account_code_2; $account_code_3 = $value->account_code_3; $account_code_4 = $value->account_code_4; $book_out_qty = $value->book_out_qty; $doc_format_code = $value->doc_format_code; $unit_standard_stand_value = $value->unit_standard_stand_value; $unit_standard_divide_value = $value->unit_standard_divide_value; $sign_code = $value->sign_code; $supplier_code = $value->supplier_code; $fixed_cost = $value->fixed_cost; $drink_type = $value->drink_type; $average_cost_1 = $value->average_cost_1; $group_sub = $value->group_sub; $use_expire = $value->use_expire; $barcode_checker_print = $value->barcode_checker_print; $print_order_per_unit = $value->print_order_per_unit; $production_period = $value->production_period; $is_new_item = $value->is_new_item; $commission_rate = $value->commission_rate; $is_eordershow = $value->is_eordershow; $no_discount = $value->no_discount; $serial_no_format = $value->serial_no_format; $pos_no_sum = $value->pos_no_sum; $item_promote = $value->item_promote; $sum_sale_1 = $value->sum_sale_1; $is_speech = $value->is_speech; $medicine_register_number = $value->medicine_register_number; $medicine_standard_code = $value->medicine_standard_code; $quantity = $value->quantity; $degree = $value->degree; $is_product_boonrawd = $value->is_product_boonrawd; $tpu_code = $value->tpu_code; $gpu_code = $value->gpu_code; $group_sub2 = $value->group_sub2; $ic_discount_group = $value->ic_discount_group; $name_from_remark = $value->name_from_remark; $manufacturer_code = $value->manufacturer_code; $create_datetime = $value->create_datetime; $last_update_date_time = $value->last_update_date_time; $create_code = $value->create_code; $last_update_code = $value->last_update_code; $have_take_away = $value->have_take_away; $create_date_time_now = date('Y-m-d H:i:s'); $topping_product = $value->topping_product; $product_age = $value->product_age; $qty_per_pallet = $value->qty_per_pallet; $qc_product = $value->qc_product; $qc_product_retest_day = $value->qc_product_retest_day;
            $ic_code = $value->ic_code; $formular = $value->formular; $po_over = $value->po_over; $so_over = $value->so_over; $account_group = $value->account_group; $serial_number = $value->serial_number; $tax_import = $value->tax_import; $tax_rate = $value->tax_rate; $purchase_manager = $value->purchase_manager; $sale_manager = $value->sale_manager; $start_purchase_wh = $value->start_purchase_wh; $start_purchase_shelf = $value->start_purchase_shelf; $start_purchase_unit = $value->start_purchase_unit; $start_sale_wh = $value->start_sale_wh; $start_sale_shelf = $value->start_sale_shelf; $start_sale_unit = $value->start_sale_unit; $cost_produce = $value->cost_produce; $cost_standard = $value->cost_standard; $unit_for_stock = $value->unit_for_stock; $ic_out_wh = $value->ic_out_wh; $ic_out_shelf = $value->ic_out_shelf; $ic_reserve_wh = $value->ic_reserve_wh; $reserve_status = $value->reserve_status; $discount = $value->discount; $purchase_point = $value->purchase_point; $unit_2_code = $value->unit_2_code; $unit_2_qty = $value->unit_2_qty; $unit_2_average = $value->unit_2_average; $unit_2_average_value = $value->unit_2_average_value; $user_group_for_purchase = $value->user_group_for_purchase; $user_group_for_sale = $value->user_group_for_sale; $user_group_for_manage = $value->user_group_for_manage; $user_group_for_warehouse = $value->user_group_for_warehouse; $user_status = $value->user_status; $close_reason = $value->close_reason; $close_date = $value->close_date; $ref_file_1 = $value->ref_file_1; $ref_file_2 = $value->ref_file_2; $ref_file_3 = $value->ref_file_3; $ref_file_4 = $value->ref_file_4; $ref_file_5 = $value->ref_file_5; $dimension_1 = $value->dimension_1; $dimension_2 = $value->dimension_2; $dimension_3 = $value->dimension_3; $dimension_4 = $value->dimension_4; $dimension_5 = $value->dimension_5; $dimension_6 = $value->dimension_6; $dimension_7 = $value->dimension_7; $dimension_8 = $value->dimension_8; $dimension_9 = $value->dimension_9; $dimension_10 = $value->dimension_10; $sale_price_1 = $value->sale_price_1; $sale_price_2 = $value->sale_price_2; $sale_price_3 = $value->sale_price_3; $sale_price_4 = $value->sale_price_4; $maximum_qty = $value->maximum_qty; $minimum_qty = $value->minimum_qty; $dimension_11 = $value->dimension_11; $dimension_12 = $value->dimension_12; $dimension_13 = $value->dimension_13; $dimension_14 = $value->dimension_14; $dimension_15 = $value->dimension_15; $dimension_16 = $value->dimension_16; $dimension_17 = $value->dimension_17; $dimension_18 = $value->dimension_18; $dimension_19 = $value->dimension_19; $dimension_20 = $value->dimension_20; $accrued_control = $value->accrued_control; $lock_price = $value->lock_price; $lock_discount = $value->lock_discount; $lock_cost = $value->lock_cost; $is_end = $value->is_end; $is_hold_purchase = $value->is_hold_purchase; $is_hold_sale = $value->is_hold_sale; $is_stop = $value->is_stop; $balance_control = $value->balance_control; $have_point = $value->have_point; $start_unit_code = $value->start_unit_code; $dimension_21 = $value->dimension_21; $dimension_22 = $value->dimension_22; $dimension_23 = $value->dimension_23; $dimension_24 = $value->dimension_24; $dimension_25 = $value->dimension_25; $is_premium = $value->is_premium; $dimension_26 = $value->dimension_26; $dimension_27 = $value->dimension_27; $dimension_28 = $value->dimension_28; $dimension_29 = $value->dimension_29; $dimension_30 = $value->dimension_30; $dimension_31 = $value->dimension_31; $dimension_32 = $value->dimension_32; $dimension_33 = $value->dimension_33; $dimension_34 = $value->dimension_34; $dimension_35 = $value->dimension_35; $dimension_36 = $value->dimension_36; $dimension_37 = $value->dimension_37; $dimension_38 = $value->dimension_38; $dimension_39 = $value->dimension_39; $dimension_40 = $value->dimension_40; $dimension_41 = $value->dimension_41; $dimension_42 = $value->dimension_42; $dimension_43 = $value->dimension_43; $dimension_44 = $value->dimension_44; $dimension_45 = $value->dimension_45; $before_sale_unit = $value->before_sale_unit;

            /// ເພີ້ມເຂົ້າຖານ Odienmall
            $sql_odienmall = "INSERT INTO public.ic_inventory(
                ignore_sync, is_lock_record, code, code_old, name_1, name_2, name_eng_1, name_eng_2, name_market, name_for_bill, short_name, name_for_pos, name_for_search, item_type, item_category, group_main, item_brand, item_pattern, item_design, item_grade, item_class, item_size, item_color, item_character, item_status, unit_type, cost_type, tax_type, item_sale_type, item_rent_type, unit_standard, unit_cost, income_type, description, item_model, ic_serial_no, remark, status, guid_code, last_movement_date, average_cost, item_in_stock, balance_qty, accrued_in_qty, accrued_out_qty, unit_standard_name, update_price, update_detail, account_code_1, account_code_2, account_code_3, account_code_4, book_out_qty, doc_format_code, unit_standard_stand_value, unit_standard_divide_value, sign_code, supplier_code, fixed_cost, drink_type, average_cost_1, group_sub, use_expire, barcode_checker_print, print_order_per_unit, production_period, is_new_item, commission_rate, is_eordershow, no_discount, serial_no_format, pos_no_sum, item_promote, sum_sale_1, is_speech, medicine_register_number, medicine_standard_code, quantity, degree, is_product_boonrawd, tpu_code, gpu_code, group_sub2, ic_discount_group, name_from_remark, manufacturer_code, create_datetime, last_update_date_time, create_code, last_update_code, have_take_away, create_date_time_now, topping_product, product_age, qty_per_pallet, qc_product, qc_product_retest_day)
                VALUES ('$ignore_sync', '$is_lock_record', '$code', null, '$name_1', '$name_2', '$name_eng_1', '$name_eng_2', '$name_market', '$name_for_bill', '$short_name', '$name_for_pos', '$name_for_search', '$item_type', '$item_category', '$group_main', '$item_brand', '$item_pattern', '$item_design', '$item_grade', '$item_class', '$item_size', '$item_color', '$item_character', '$item_status', '$unit_type', '$cost_type', '$tax_type', '$item_sale_type', '$item_rent_type', '$unit_standard', '$unit_cost', '$income_type', '$description', '$item_model', '$ic_serial_no', '$remark', '$status', '$guid_code', null, '$average_cost', '$item_in_stock', '$balance_qty', '$accrued_in_qty', '$accrued_out_qty', '$unit_standard_name', '$update_price', '$update_detail', '$account_code_1', '$account_code_2', '$account_code_3', '$account_code_4', '$book_out_qty', '$doc_format_code', '$unit_standard_stand_value', '$unit_standard_divide_value', '$sign_code', '$supplier_code', '$fixed_cost', '$drink_type', '$average_cost_1', '$group_sub', '$use_expire', '$barcode_checker_print', '$print_order_per_unit', '$production_period', '$is_new_item', '$commission_rate', '$is_eordershow', '$no_discount', '$serial_no_format', '$pos_no_sum', '$item_promote', '$sum_sale_1', '$is_speech', '$medicine_register_number', '$medicine_standard_code', '$quantity', '$degree', '$is_product_boonrawd', '$tpu_code', '$gpu_code', '$group_sub2', '$ic_discount_group', '$name_from_remark', '$manufacturer_code', null, null, '$create_code', '$last_update_code', '$have_take_away', '$create_date_time_now', '$topping_product', '$product_age', '$qty_per_pallet', '$qc_product', '$qc_product_retest_day');";
            $insert_inventory_odienmall = DB::connection('pgsql_odmall')->insert($sql_odienmall);
            if ($insert_inventory_odienmall) {
                //ບັນທຶກ inventory detail
                $sql_detial = "INSERT INTO public.ic_inventory_detail(
                    ignore_sync, is_lock_record, ic_code, formular, po_over, so_over, account_group, serial_number, tax_import, tax_rate, purchase_manager, sale_manager, start_purchase_wh, start_purchase_shelf, start_purchase_unit, start_sale_wh, start_sale_shelf, start_sale_unit, cost_produce, cost_standard, unit_for_stock, ic_out_wh, ic_out_shelf, ic_reserve_wh, reserve_status, discount, purchase_point, unit_2_code, unit_2_qty, unit_2_average, unit_2_average_value, user_group_for_purchase, user_group_for_sale, user_group_for_manage, user_group_for_warehouse, user_status, close_reason, close_date, ref_file_1, ref_file_2, ref_file_3, ref_file_4, ref_file_5, dimension_1, dimension_2, dimension_3, dimension_4, dimension_5, dimension_6, dimension_7, dimension_8, dimension_9, dimension_10, sale_price_1, sale_price_2, sale_price_3, sale_price_4, maximum_qty, minimum_qty, dimension_11, dimension_12, dimension_13, dimension_14, dimension_15, dimension_16, dimension_17, dimension_18, dimension_19, dimension_20, accrued_control, lock_price, lock_discount, lock_cost, is_end, is_hold_purchase, is_hold_sale, is_stop, balance_control, have_point, start_unit_code, dimension_21, dimension_22, dimension_23, dimension_24, dimension_25, is_premium, dimension_26, dimension_27, dimension_28, dimension_29, dimension_30, dimension_31, dimension_32, dimension_33, dimension_34, dimension_35, dimension_36, dimension_37, dimension_38, dimension_39, dimension_40, dimension_41, dimension_42, dimension_43, dimension_44, dimension_45, before_sale_unit, create_date_time_now)
                    VALUES ('$ignore_sync', '$is_lock_record', '$ic_code', '$formular', '$po_over', '$so_over', '$account_group', '$serial_number', '$tax_import', '$tax_rate', '$purchase_manager', '$sale_manager', '$start_purchase_wh', '$start_purchase_shelf', '$start_purchase_unit', '$start_sale_wh', '$start_sale_shelf', '$start_sale_unit', '$cost_produce', '$cost_standard', '$unit_for_stock', '$ic_out_wh', '$ic_out_shelf', '$ic_reserve_wh', '$reserve_status', '$discount', '$purchase_point', '$unit_2_code', '$unit_2_qty', '$unit_2_average', '$unit_2_average_value', '$user_group_for_purchase', '$user_group_for_sale', '$user_group_for_manage', '$user_group_for_warehouse', '$user_status', '$close_reason', null, '$ref_file_1', '$ref_file_2', '$ref_file_3', '$ref_file_4', '$ref_file_5', '$dimension_1', '$dimension_2', '$dimension_3', '$dimension_4', '$dimension_5', '$dimension_6', '$dimension_7', '$dimension_8', '$dimension_9', '$dimension_10', '$sale_price_1', '$sale_price_2', '$sale_price_3', '$sale_price_4', '$maximum_qty', '$minimum_qty', '$dimension_11', '$dimension_12', '$dimension_13', '$dimension_14', '$dimension_15', '$dimension_16', '$dimension_17', '$dimension_18', '$dimension_19', '$dimension_20', '$accrued_control', '$lock_price', '$lock_discount', '$lock_cost', '$is_end', '$is_hold_purchase', '$is_hold_sale', '$is_stop', '$balance_control', '$have_point', '$start_unit_code', '$dimension_21', '$dimension_22', '$dimension_23', '$dimension_24', '$dimension_25', '$is_premium', '$dimension_26', '$dimension_27', '$dimension_28', '$dimension_29', '$dimension_30', '$dimension_31', '$dimension_32', '$dimension_33', '$dimension_34', '$dimension_35', '$dimension_36', '$dimension_37', '$dimension_38', '$dimension_39', '$dimension_40', '$dimension_41', '$dimension_42', '$dimension_43', '$dimension_44', '$dimension_45', '$before_sale_unit', '$create_date_time_now');";
                $insert_inventory_detail_odienmall = DB::connection('pgsql_odmall')->insert($sql_detial);
                if ($insert_inventory_detail_odienmall) {
                    $load_unit = DB::select("SELECT ignore_sync, is_lock_record, roworder, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now, pi_no
                    FROM public.ic_unit_use WHERE pi_no = ?", [$value->pi_no]);

                    foreach ($load_unit as $key => $unit_value) {
                        $ignore_sync = $unit_value->ignore_sync; $is_lock_record = $unit_value->is_lock_record; $code = $unit_value->code; $line_number = $unit_value->line_number; $stand_value = $unit_value->stand_value; $divide_value = $unit_value->divide_value; $ratio = $unit_value->ratio; $row_order = $unit_value->row_order; $width_length_height = $unit_value->width_length_height; $ic_code = $unit_value->ic_code; $remark = $unit_value->remark; $weight = $unit_value->weight; $status = $unit_value->status; $unit_size = $unit_value->unit_size;
                        $create_date_time_now = date('Y-m-d H:i:s');
                        $sql = "INSERT INTO public.ic_unit_use(
                            ignore_sync, is_lock_record, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now)
                            VALUES ('$ignore_sync', '$is_lock_record', '$code', '$line_number', '$stand_value', '$divide_value', '$ratio', '$row_order', '$width_length_height', '$ic_code', '$remark', '$weight', '$status', '$unit_size', '$create_date_time_now');";
                       $sql_use =  DB::connection('pgsql_odmall')->insert($sql);

                        if($sql_use){
                            $wh = DB::connection('pgsql_odmall')->select("select code,whcode FROM ic_shelf");
                            foreach($wh as $key => $item){
                                $sql_use = DB::connection('pgsql_odmall')->INSERT("INSERT INTO ic_wh_shelf(wh_code,shelf_code,ic_code,status)values('$item->whcode','$item->code','$unit_value->ic_code',1)");
                            }
                        }
                    }
                }
            }

        }

        foreach ($load_data as $key => $value) {
            $ignore_sync = $value->ignore_sync; $is_lock_record = $value->is_lock_record; $code = $value->code; $code_old = $value->code_old; $name_1 = $value->name_1; $name_2 = $value->name_2; $name_eng_1 = $value->name_eng_1; $name_eng_2 = $value->name_eng_2; $name_market = $value->name_market; $name_for_bill = $value->name_for_bill; $short_name = $value->short_name; $name_for_pos = $value->name_for_pos; $name_for_search = $value->name_for_search; $item_type = $value->item_type; $item_category = $value->item_category; $group_main = $value->group_main; $item_brand = $value->item_brand; $item_pattern = $value->item_pattern; $item_design = $value->item_design; $item_grade = $value->item_grade; $item_class = $value->item_class; $item_size = $value->item_size; $item_color = $value->item_color; $item_character = $value->item_character; $item_status = $value->item_status; $unit_type = $value->unit_type; $cost_type = $value->cost_type; $tax_type = $value->tax_type; $item_sale_type = $value->item_sale_type; $item_rent_type = $value->item_rent_type; $unit_standard = $value->unit_standard; $unit_cost = $value->unit_cost; $income_type = $value->income_type; $description = $value->description; $item_model = $value->item_model; $ic_serial_no = $value->ic_serial_no; $remark = $value->remark; $status = $value->status; $guid_code = $value->guid_code; $last_movement_date = $value->last_movement_date; $average_cost = $value->average_cost; $item_in_stock = $value->item_in_stock; $balance_qty = $value->balance_qty; $accrued_in_qty = $value->accrued_in_qty; $accrued_out_qty = $value->accrued_out_qty; $unit_standard_name = $value->unit_standard_name; $update_price = $value->update_price; $update_detail = $value->update_detail; $account_code_1 = $value->account_code_1; $account_code_2 = $value->account_code_2; $account_code_3 = $value->account_code_3; $account_code_4 = $value->account_code_4; $book_out_qty = $value->book_out_qty; $doc_format_code = $value->doc_format_code; $unit_standard_stand_value = $value->unit_standard_stand_value; $unit_standard_divide_value = $value->unit_standard_divide_value; $sign_code = $value->sign_code; $supplier_code = $value->supplier_code; $fixed_cost = $value->fixed_cost; $drink_type = $value->drink_type; $average_cost_1 = $value->average_cost_1; $group_sub = $value->group_sub; $use_expire = $value->use_expire; $barcode_checker_print = $value->barcode_checker_print; $print_order_per_unit = $value->print_order_per_unit; $production_period = $value->production_period; $is_new_item = $value->is_new_item; $commission_rate = $value->commission_rate; $is_eordershow = $value->is_eordershow; $no_discount = $value->no_discount; $serial_no_format = $value->serial_no_format; $pos_no_sum = $value->pos_no_sum; $item_promote = $value->item_promote; $sum_sale_1 = $value->sum_sale_1; $is_speech = $value->is_speech; $medicine_register_number = $value->medicine_register_number; $medicine_standard_code = $value->medicine_standard_code; $quantity = $value->quantity; $degree = $value->degree; $is_product_boonrawd = $value->is_product_boonrawd; $tpu_code = $value->tpu_code; $gpu_code = $value->gpu_code; $group_sub2 = $value->group_sub2; $ic_discount_group = $value->ic_discount_group; $name_from_remark = $value->name_from_remark; $manufacturer_code = $value->manufacturer_code; $create_datetime = $value->create_datetime; $last_update_date_time = $value->last_update_date_time; $create_code = $value->create_code; $last_update_code = $value->last_update_code; $have_take_away = $value->have_take_away; $create_date_time_now = date('Y-m-d H:i:s'); $topping_product = $value->topping_product; $product_age = $value->product_age; $qty_per_pallet = $value->qty_per_pallet; $qc_product = $value->qc_product; $qc_product_retest_day = $value->qc_product_retest_day; $ic_branch_code = $value->ic_branch_code;
            $ic_code = $value->ic_code; $formular = $value->formular; $po_over = $value->po_over; $so_over = $value->so_over; $account_group = $value->account_group; $serial_number = $value->serial_number; $tax_import = $value->tax_import; $tax_rate = $value->tax_rate; $purchase_manager = $value->purchase_manager; $sale_manager = $value->sale_manager; $start_purchase_wh = $value->start_purchase_wh; $start_purchase_shelf = $value->start_purchase_shelf; $start_purchase_unit = $value->start_purchase_unit; $start_sale_wh = $value->start_sale_wh; $start_sale_shelf = $value->start_sale_shelf; $start_sale_unit = $value->start_sale_unit; $cost_produce = $value->cost_produce; $cost_standard = $value->cost_standard; $unit_for_stock = $value->unit_for_stock; $ic_out_wh = $value->ic_out_wh; $ic_out_shelf = $value->ic_out_shelf; $ic_reserve_wh = $value->ic_reserve_wh; $reserve_status = $value->reserve_status; $discount = $value->discount; $purchase_point = $value->purchase_point; $unit_2_code = $value->unit_2_code; $unit_2_qty = $value->unit_2_qty; $unit_2_average = $value->unit_2_average; $unit_2_average_value = $value->unit_2_average_value; $user_group_for_purchase = $value->user_group_for_purchase; $user_group_for_sale = $value->user_group_for_sale; $user_group_for_manage = $value->user_group_for_manage; $user_group_for_warehouse = $value->user_group_for_warehouse; $user_status = $value->user_status; $close_reason = $value->close_reason; $close_date = $value->close_date; $ref_file_1 = $value->ref_file_1; $ref_file_2 = $value->ref_file_2; $ref_file_3 = $value->ref_file_3; $ref_file_4 = $value->ref_file_4; $ref_file_5 = $value->ref_file_5; $dimension_1 = $value->dimension_1; $dimension_2 = $value->dimension_2; $dimension_3 = $value->dimension_3; $dimension_4 = $value->dimension_4; $dimension_5 = $value->dimension_5; $dimension_6 = $value->dimension_6; $dimension_7 = $value->dimension_7; $dimension_8 = $value->dimension_8; $dimension_9 = $value->dimension_9; $dimension_10 = $value->dimension_10; $sale_price_1 = $value->sale_price_1; $sale_price_2 = $value->sale_price_2; $sale_price_3 = $value->sale_price_3; $sale_price_4 = $value->sale_price_4; $maximum_qty = $value->maximum_qty; $minimum_qty = $value->minimum_qty; $dimension_11 = $value->dimension_11; $dimension_12 = $value->dimension_12; $dimension_13 = $value->dimension_13; $dimension_14 = $value->dimension_14; $dimension_15 = $value->dimension_15; $dimension_16 = $value->dimension_16; $dimension_17 = $value->dimension_17; $dimension_18 = $value->dimension_18; $dimension_19 = $value->dimension_19; $dimension_20 = $value->dimension_20; $accrued_control = $value->accrued_control; $lock_price = $value->lock_price; $lock_discount = $value->lock_discount; $lock_cost = $value->lock_cost; $is_end = $value->is_end; $is_hold_purchase = $value->is_hold_purchase; $is_hold_sale = $value->is_hold_sale; $is_stop = $value->is_stop; $balance_control = $value->balance_control; $have_point = $value->have_point; $start_unit_code = $value->start_unit_code; $dimension_21 = $value->dimension_21; $dimension_22 = $value->dimension_22; $dimension_23 = $value->dimension_23; $dimension_24 = $value->dimension_24; $dimension_25 = $value->dimension_25; $is_premium = $value->is_premium; $dimension_26 = $value->dimension_26; $dimension_27 = $value->dimension_27; $dimension_28 = $value->dimension_28; $dimension_29 = $value->dimension_29; $dimension_30 = $value->dimension_30; $dimension_31 = $value->dimension_31; $dimension_32 = $value->dimension_32; $dimension_33 = $value->dimension_33; $dimension_34 = $value->dimension_34; $dimension_35 = $value->dimension_35; $dimension_36 = $value->dimension_36; $dimension_37 = $value->dimension_37; $dimension_38 = $value->dimension_38; $dimension_39 = $value->dimension_39; $dimension_40 = $value->dimension_40; $dimension_41 = $value->dimension_41; $dimension_42 = $value->dimension_42; $dimension_43 = $value->dimension_43; $dimension_44 = $value->dimension_44; $dimension_45 = $value->dimension_45; $before_sale_unit = $value->before_sale_unit;

            /// ເພີ້ມເຂົ້າຖານ Odienmall
            $sql_od = "INSERT INTO public.ic_inventory(
                ignore_sync, is_lock_record, code, code_old, name_1, name_2, name_eng_1, name_eng_2, name_market, name_for_bill, short_name, name_for_pos, name_for_search, item_type, item_category, group_main, item_brand, item_pattern, item_design, item_grade, item_class, item_size, item_color, item_character, item_status, unit_type, cost_type, tax_type, item_sale_type, item_rent_type, unit_standard, unit_cost, income_type, description, item_model, ic_serial_no, remark, status, guid_code, last_movement_date, average_cost, item_in_stock, balance_qty, accrued_in_qty, accrued_out_qty, unit_standard_name, update_price, update_detail, account_code_1, account_code_2, account_code_3, account_code_4, book_out_qty, doc_format_code, unit_standard_stand_value, unit_standard_divide_value, sign_code, supplier_code, fixed_cost, drink_type, average_cost_1, group_sub, use_expire, barcode_checker_print, print_order_per_unit, production_period, is_new_item, commission_rate, is_eordershow, no_discount, serial_no_format, pos_no_sum, item_promote, sum_sale_1, is_speech, medicine_register_number, medicine_standard_code, quantity, degree, is_product_boonrawd, tpu_code, gpu_code, group_sub2, ic_discount_group, name_from_remark, manufacturer_code, create_datetime, last_update_date_time, create_code, last_update_code, have_take_away, create_date_time_now, topping_product, product_age, qty_per_pallet, qc_product, qc_product_retest_day, ic_branch_code)
                VALUES ('$ignore_sync', '$is_lock_record', '$code', null, '$name_1', '$name_2', '$name_eng_1', '$name_eng_2', '$name_market', '$name_for_bill', '$short_name', '$name_for_pos', '$name_for_search', '$item_type', '$item_category', '$group_main', '$item_brand', '$item_pattern', '$item_design', '$item_grade', '$item_class', '$item_size', '$item_color', '$item_character', '$item_status', '$unit_type', '$cost_type', '$tax_type', '$item_sale_type', '$item_rent_type', '$unit_standard', '$unit_cost', '$income_type', '$description', '$item_model', '$ic_serial_no', '$remark', '$status', '$guid_code', null, '$average_cost', '$item_in_stock', '$balance_qty', '$accrued_in_qty', '$accrued_out_qty', '$unit_standard_name', '$update_price', '$update_detail', '$account_code_1', '$account_code_2', '$account_code_3', '$account_code_4', '$book_out_qty', '$doc_format_code', '$unit_standard_stand_value', '$unit_standard_divide_value', '$sign_code', '$supplier_code', '$fixed_cost', '$drink_type', '$average_cost_1', '$group_sub', '$use_expire', '$barcode_checker_print', '$print_order_per_unit', '$production_period', '$is_new_item', '$commission_rate', '$is_eordershow', '$no_discount', '$serial_no_format', '$pos_no_sum', '$item_promote', '$sum_sale_1', '$is_speech', '$medicine_register_number', '$medicine_standard_code', '$quantity', '$degree', '$is_product_boonrawd', '$tpu_code', '$gpu_code', '$group_sub2', '$ic_discount_group', '$name_from_remark', '$manufacturer_code', null, null, '$create_code', '$last_update_code', '$have_take_away', '$create_date_time_now', '$topping_product', '$product_age', '$qty_per_pallet', '$qc_product', '$qc_product_retest_day','$ic_branch_code');";
            $insert_inventory_od = DB::connection('pgsql_od')->insert($sql_od);
            if ($insert_inventory_od) {
                //ບັນທຶກ inventory detail
                $sql_detial = "INSERT INTO public.ic_inventory_detail(
                    ignore_sync, is_lock_record, ic_code, formular, po_over, so_over, account_group, serial_number, tax_import, tax_rate, purchase_manager, sale_manager, start_purchase_wh, start_purchase_shelf, start_purchase_unit, start_sale_wh, start_sale_shelf, start_sale_unit, cost_produce, cost_standard, unit_for_stock, ic_out_wh, ic_out_shelf, ic_reserve_wh, reserve_status, discount, purchase_point, unit_2_code, unit_2_qty, unit_2_average, unit_2_average_value, user_group_for_purchase, user_group_for_sale, user_group_for_manage, user_group_for_warehouse, user_status, close_reason, close_date, ref_file_1, ref_file_2, ref_file_3, ref_file_4, ref_file_5, dimension_1, dimension_2, dimension_3, dimension_4, dimension_5, dimension_6, dimension_7, dimension_8, dimension_9, dimension_10, sale_price_1, sale_price_2, sale_price_3, sale_price_4, maximum_qty, minimum_qty, dimension_11, dimension_12, dimension_13, dimension_14, dimension_15, dimension_16, dimension_17, dimension_18, dimension_19, dimension_20, accrued_control, lock_price, lock_discount, lock_cost, is_end, is_hold_purchase, is_hold_sale, is_stop, balance_control, have_point, start_unit_code, dimension_21, dimension_22, dimension_23, dimension_24, dimension_25, is_premium, dimension_26, dimension_27, dimension_28, dimension_29, dimension_30, dimension_31, dimension_32, dimension_33, dimension_34, dimension_35, dimension_36, dimension_37, dimension_38, dimension_39, dimension_40, dimension_41, dimension_42, dimension_43, dimension_44, dimension_45, before_sale_unit, create_date_time_now)
                    VALUES ('$ignore_sync', '$is_lock_record', '$ic_code', '$formular', '$po_over', '$so_over', '$account_group', '$serial_number', '$tax_import', '$tax_rate', '$purchase_manager', '$sale_manager', '$start_purchase_wh', '$start_purchase_shelf', '$start_purchase_unit', '$start_sale_wh', '$start_sale_shelf', '$start_sale_unit', '$cost_produce', '$cost_standard', '$unit_for_stock', '$ic_out_wh', '$ic_out_shelf', '$ic_reserve_wh', '$reserve_status', '$discount', '$purchase_point', '$unit_2_code', '$unit_2_qty', '$unit_2_average', '$unit_2_average_value', '$user_group_for_purchase', '$user_group_for_sale', '$user_group_for_manage', '$user_group_for_warehouse', '$user_status', '$close_reason', null, '$ref_file_1', '$ref_file_2', '$ref_file_3', '$ref_file_4', '$ref_file_5', '$dimension_1', '$dimension_2', '$dimension_3', '$dimension_4', '$dimension_5', '$dimension_6', '$dimension_7', '$dimension_8', '$dimension_9', '$dimension_10', '$sale_price_1', '$sale_price_2', '$sale_price_3', '$sale_price_4', '$maximum_qty', '$minimum_qty', '$dimension_11', '$dimension_12', '$dimension_13', '$dimension_14', '$dimension_15', '$dimension_16', '$dimension_17', '$dimension_18', '$dimension_19', '$dimension_20', '$accrued_control', '$lock_price', '$lock_discount', '$lock_cost', '$is_end', '$is_hold_purchase', '$is_hold_sale', '$is_stop', '$balance_control', '$have_point', '$start_unit_code', '$dimension_21', '$dimension_22', '$dimension_23', '$dimension_24', '$dimension_25', '$is_premium', '$dimension_26', '$dimension_27', '$dimension_28', '$dimension_29', '$dimension_30', '$dimension_31', '$dimension_32', '$dimension_33', '$dimension_34', '$dimension_35', '$dimension_36', '$dimension_37', '$dimension_38', '$dimension_39', '$dimension_40', '$dimension_41', '$dimension_42', '$dimension_43', '$dimension_44', '$dimension_45', '$before_sale_unit', '$create_date_time_now');";
                $insert_inventory_detail_od = DB::connection('pgsql_od')->insert($sql_detial);
                if ($insert_inventory_detail_od) {
                    $load_unit = DB::select("SELECT ignore_sync, is_lock_record, roworder, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now, pi_no
                    FROM public.ic_unit_use WHERE pi_no = ?", [$value->pi_no]);

                    foreach ($load_unit as $key => $unit_value) {
                        $ignore_sync = $unit_value->ignore_sync; $is_lock_record = $unit_value->is_lock_record; $code = $unit_value->code; $line_number = $unit_value->line_number; $stand_value = $unit_value->stand_value; $divide_value = $unit_value->divide_value; $ratio = $unit_value->ratio; $row_order = $unit_value->row_order; $width_length_height = $unit_value->width_length_height; $ic_code = $unit_value->ic_code; $remark = $unit_value->remark; $weight = $unit_value->weight; $status = $unit_value->status; $unit_size = $unit_value->unit_size;
                        $create_date_time_now = date('Y-m-d H:i:s');
                        $sql = "INSERT INTO public.ic_unit_use(
                            ignore_sync, is_lock_record, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now)
                            VALUES ('$ignore_sync', '$is_lock_record', '$code', '$line_number', '$stand_value', '$divide_value', '$ratio', '$row_order', '$width_length_height', '$ic_code', '$remark', '$weight', '$status', '$unit_size', '$create_date_time_now');";
                       $sql_use = DB::connection('pgsql_od')->insert($sql);

                        if($sql_use){
                            $wh = DB::connection('pgsql_od')->select("select code,whcode FROM ic_shelf");
                            foreach($wh as $key => $item){
                                DB::connection('pgsql_od')->INSERT("INSERT INTO ic_wh_shelf(wh_code,shelf_code,ic_code,status)values('$item->whcode','$item->code','$unit_value->ic_code',1)");
                            }
                        }
                    }
                }
            }

        }

        foreach ($load_data as $key => $value) {
            $ignore_sync = $value->ignore_sync; $is_lock_record = $value->is_lock_record; $code = $value->code; $code_old = $value->code_old; $name_1 = $value->name_1; $name_2 = $value->name_2; $name_eng_1 = $value->name_eng_1; $name_eng_2 = $value->name_eng_2; $name_market = $value->name_market; $name_for_bill = $value->name_for_bill; $short_name = $value->short_name; $name_for_pos = $value->name_for_pos; $name_for_search = $value->name_for_search; $item_type = $value->item_type; $item_category = $value->item_category; $group_main = $value->group_main; $item_brand = $value->item_brand; $item_pattern = $value->item_pattern; $item_design = $value->item_design; $item_grade = $value->item_grade; $item_class = $value->item_class; $item_size = $value->item_size; $item_color = $value->item_color; $item_character = $value->item_character; $item_status = $value->item_status; $unit_type = $value->unit_type; $cost_type = $value->cost_type; $tax_type = $value->tax_type; $item_sale_type = $value->item_sale_type; $item_rent_type = $value->item_rent_type; $unit_standard = $value->unit_standard; $unit_cost = $value->unit_cost; $income_type = $value->income_type; $description = $value->description; $item_model = $value->item_model; $ic_serial_no = $value->ic_serial_no; $remark = $value->remark; $status = $value->status; $guid_code = $value->guid_code; $last_movement_date = $value->last_movement_date; $average_cost = $value->average_cost; $item_in_stock = $value->item_in_stock; $balance_qty = $value->balance_qty; $accrued_in_qty = $value->accrued_in_qty; $accrued_out_qty = $value->accrued_out_qty; $unit_standard_name = $value->unit_standard_name; $update_price = $value->update_price; $update_detail = $value->update_detail; $account_code_1 = $value->account_code_1; $account_code_2 = $value->account_code_2; $account_code_3 = $value->account_code_3; $account_code_4 = $value->account_code_4; $book_out_qty = $value->book_out_qty; $doc_format_code = $value->doc_format_code; $unit_standard_stand_value = $value->unit_standard_stand_value; $unit_standard_divide_value = $value->unit_standard_divide_value; $sign_code = $value->sign_code; $supplier_code = $value->supplier_code; $fixed_cost = $value->fixed_cost; $drink_type = $value->drink_type; $average_cost_1 = $value->average_cost_1; $group_sub = $value->group_sub; $use_expire = $value->use_expire; $barcode_checker_print = $value->barcode_checker_print; $print_order_per_unit = $value->print_order_per_unit; $production_period = $value->production_period; $is_new_item = $value->is_new_item; $commission_rate = $value->commission_rate; $is_eordershow = $value->is_eordershow; $no_discount = $value->no_discount; $serial_no_format = $value->serial_no_format; $pos_no_sum = $value->pos_no_sum; $item_promote = $value->item_promote; $sum_sale_1 = $value->sum_sale_1; $is_speech = $value->is_speech; $medicine_register_number = $value->medicine_register_number; $medicine_standard_code = $value->medicine_standard_code; $quantity = $value->quantity; $degree = $value->degree; $is_product_boonrawd = $value->is_product_boonrawd; $tpu_code = $value->tpu_code; $gpu_code = $value->gpu_code; $group_sub2 = $value->group_sub2; $ic_discount_group = $value->ic_discount_group; $name_from_remark = $value->name_from_remark; $manufacturer_code = $value->manufacturer_code; $create_datetime = $value->create_datetime; $last_update_date_time = $value->last_update_date_time; $create_code = $value->create_code; $last_update_code = $value->last_update_code; $have_take_away = $value->have_take_away; $create_date_time_now = date('Y-m-d H:i:s'); $topping_product = $value->topping_product; $product_age = $value->product_age; $qty_per_pallet = $value->qty_per_pallet; $qc_product = $value->qc_product; $qc_product_retest_day = $value->qc_product_retest_day; $ic_branch_code = $value->ic_branch_code;
            $ic_code = $value->ic_code; $formular = $value->formular; $po_over = $value->po_over; $so_over = $value->so_over; $account_group = $value->account_group; $serial_number = $value->serial_number; $tax_import = $value->tax_import; $tax_rate = $value->tax_rate; $purchase_manager = $value->purchase_manager; $sale_manager = $value->sale_manager; $start_purchase_wh = $value->start_purchase_wh; $start_purchase_shelf = $value->start_purchase_shelf; $start_purchase_unit = $value->start_purchase_unit; $start_sale_wh = $value->start_sale_wh; $start_sale_shelf = $value->start_sale_shelf; $start_sale_unit = $value->start_sale_unit; $cost_produce = $value->cost_produce; $cost_standard = $value->cost_standard; $unit_for_stock = $value->unit_for_stock; $ic_out_wh = $value->ic_out_wh; $ic_out_shelf = $value->ic_out_shelf; $ic_reserve_wh = $value->ic_reserve_wh; $reserve_status = $value->reserve_status; $discount = $value->discount; $purchase_point = $value->purchase_point; $unit_2_code = $value->unit_2_code; $unit_2_qty = $value->unit_2_qty; $unit_2_average = $value->unit_2_average; $unit_2_average_value = $value->unit_2_average_value; $user_group_for_purchase = $value->user_group_for_purchase; $user_group_for_sale = $value->user_group_for_sale; $user_group_for_manage = $value->user_group_for_manage; $user_group_for_warehouse = $value->user_group_for_warehouse; $user_status = $value->user_status; $close_reason = $value->close_reason; $close_date = $value->close_date; $ref_file_1 = $value->ref_file_1; $ref_file_2 = $value->ref_file_2; $ref_file_3 = $value->ref_file_3; $ref_file_4 = $value->ref_file_4; $ref_file_5 = $value->ref_file_5; $dimension_1 = $value->dimension_1; $dimension_2 = $value->dimension_2; $dimension_3 = $value->dimension_3; $dimension_4 = $value->dimension_4; $dimension_5 = $value->dimension_5; $dimension_6 = $value->dimension_6; $dimension_7 = $value->dimension_7; $dimension_8 = $value->dimension_8; $dimension_9 = $value->dimension_9; $dimension_10 = $value->dimension_10; $sale_price_1 = $value->sale_price_1; $sale_price_2 = $value->sale_price_2; $sale_price_3 = $value->sale_price_3; $sale_price_4 = $value->sale_price_4; $maximum_qty = $value->maximum_qty; $minimum_qty = $value->minimum_qty; $dimension_11 = $value->dimension_11; $dimension_12 = $value->dimension_12; $dimension_13 = $value->dimension_13; $dimension_14 = $value->dimension_14; $dimension_15 = $value->dimension_15; $dimension_16 = $value->dimension_16; $dimension_17 = $value->dimension_17; $dimension_18 = $value->dimension_18; $dimension_19 = $value->dimension_19; $dimension_20 = $value->dimension_20; $accrued_control = $value->accrued_control; $lock_price = $value->lock_price; $lock_discount = $value->lock_discount; $lock_cost = $value->lock_cost; $is_end = $value->is_end; $is_hold_purchase = $value->is_hold_purchase; $is_hold_sale = $value->is_hold_sale; $is_stop = $value->is_stop; $balance_control = $value->balance_control; $have_point = $value->have_point; $start_unit_code = $value->start_unit_code; $dimension_21 = $value->dimension_21; $dimension_22 = $value->dimension_22; $dimension_23 = $value->dimension_23; $dimension_24 = $value->dimension_24; $dimension_25 = $value->dimension_25; $is_premium = $value->is_premium; $dimension_26 = $value->dimension_26; $dimension_27 = $value->dimension_27; $dimension_28 = $value->dimension_28; $dimension_29 = $value->dimension_29; $dimension_30 = $value->dimension_30; $dimension_31 = $value->dimension_31; $dimension_32 = $value->dimension_32; $dimension_33 = $value->dimension_33; $dimension_34 = $value->dimension_34; $dimension_35 = $value->dimension_35; $dimension_36 = $value->dimension_36; $dimension_37 = $value->dimension_37; $dimension_38 = $value->dimension_38; $dimension_39 = $value->dimension_39; $dimension_40 = $value->dimension_40; $dimension_41 = $value->dimension_41; $dimension_42 = $value->dimension_42; $dimension_43 = $value->dimension_43; $dimension_44 = $value->dimension_44; $dimension_45 = $value->dimension_45; $before_sale_unit = $value->before_sale_unit;

            /// ເພີ້ມເຂົ້າຖານ Odienmall
            $sql_pp = "INSERT INTO public.ic_inventory(
                ignore_sync, is_lock_record, code, code_old, name_1, name_2, name_eng_1, name_eng_2, name_market, name_for_bill, short_name, name_for_pos, name_for_search, item_type, item_category, group_main, item_brand, item_pattern, item_design, item_grade, item_class, item_size, item_color, item_character, item_status, unit_type, cost_type, tax_type, item_sale_type, item_rent_type, unit_standard, unit_cost, income_type, description, item_model, ic_serial_no, remark, status, guid_code, last_movement_date, average_cost, item_in_stock, balance_qty, accrued_in_qty, accrued_out_qty, unit_standard_name, update_price, update_detail, account_code_1, account_code_2, account_code_3, account_code_4, book_out_qty, doc_format_code, unit_standard_stand_value, unit_standard_divide_value, sign_code, supplier_code, fixed_cost, drink_type, average_cost_1, group_sub, use_expire, barcode_checker_print, print_order_per_unit, production_period, is_new_item, commission_rate, is_eordershow, no_discount, serial_no_format, pos_no_sum, item_promote, sum_sale_1, is_speech, medicine_register_number, medicine_standard_code, quantity, degree, is_product_boonrawd, tpu_code, gpu_code, group_sub2, ic_discount_group, name_from_remark, manufacturer_code, create_datetime, last_update_date_time, create_code, last_update_code, have_take_away, create_date_time_now, topping_product, product_age, qty_per_pallet, qc_product, qc_product_retest_day,ic_branch_code)
                VALUES ('$ignore_sync', '$is_lock_record', '$code', null, '$name_1', '$name_2', '$name_eng_1', '$name_eng_2', '$name_market', '$name_for_bill', '$short_name', '$name_for_pos', '$name_for_search', '$item_type', '$item_category', '$group_main', '$item_brand', '$item_pattern', '$item_design', '$item_grade', '$item_class', '$item_size', '$item_color', '$item_character', '$item_status', '$unit_type', '$cost_type', '$tax_type', '$item_sale_type', '$item_rent_type', '$unit_standard', '$unit_cost', '$income_type', '$description', '$item_model', '$ic_serial_no', '$remark', '$status', '$guid_code', null, '$average_cost', '$item_in_stock', '$balance_qty', '$accrued_in_qty', '$accrued_out_qty', '$unit_standard_name', '$update_price', '$update_detail', '$account_code_1', '$account_code_2', '$account_code_3', '$account_code_4', '$book_out_qty', '$doc_format_code', '$unit_standard_stand_value', '$unit_standard_divide_value', '$sign_code', '$supplier_code', '$fixed_cost', '$drink_type', '$average_cost_1', '$group_sub', '$use_expire', '$barcode_checker_print', '$print_order_per_unit', '$production_period', '$is_new_item', '$commission_rate', '$is_eordershow', '$no_discount', '$serial_no_format', '$pos_no_sum', '$item_promote', '$sum_sale_1', '$is_speech', '$medicine_register_number', '$medicine_standard_code', '$quantity', '$degree', '$is_product_boonrawd', '$tpu_code', '$gpu_code', '$group_sub2', '$ic_discount_group', '$name_from_remark', '$manufacturer_code', null, null, '$create_code', '$last_update_code', '$have_take_away', '$create_date_time_now', '$topping_product', '$product_age', '$qty_per_pallet', '$qc_product', '$qc_product_retest_day','$ic_branch_code');";
            $insert_inventory_pp = DB::connection('pgsql_pp')->insert($sql_pp);
            if ($insert_inventory_pp) {
                //ບັນທຶກ inventory detail
                $sql_detial = "INSERT INTO public.ic_inventory_detail(
                    ignore_sync, is_lock_record, ic_code, formular, po_over, so_over, account_group, serial_number, tax_import, tax_rate, purchase_manager, sale_manager, start_purchase_wh, start_purchase_shelf, start_purchase_unit, start_sale_wh, start_sale_shelf, start_sale_unit, cost_produce, cost_standard, unit_for_stock, ic_out_wh, ic_out_shelf, ic_reserve_wh, reserve_status, discount, purchase_point, unit_2_code, unit_2_qty, unit_2_average, unit_2_average_value, user_group_for_purchase, user_group_for_sale, user_group_for_manage, user_group_for_warehouse, user_status, close_reason, close_date, ref_file_1, ref_file_2, ref_file_3, ref_file_4, ref_file_5, dimension_1, dimension_2, dimension_3, dimension_4, dimension_5, dimension_6, dimension_7, dimension_8, dimension_9, dimension_10, sale_price_1, sale_price_2, sale_price_3, sale_price_4, maximum_qty, minimum_qty, dimension_11, dimension_12, dimension_13, dimension_14, dimension_15, dimension_16, dimension_17, dimension_18, dimension_19, dimension_20, accrued_control, lock_price, lock_discount, lock_cost, is_end, is_hold_purchase, is_hold_sale, is_stop, balance_control, have_point, start_unit_code, dimension_21, dimension_22, dimension_23, dimension_24, dimension_25, is_premium, dimension_26, dimension_27, dimension_28, dimension_29, dimension_30, dimension_31, dimension_32, dimension_33, dimension_34, dimension_35, dimension_36, dimension_37, dimension_38, dimension_39, dimension_40, dimension_41, dimension_42, dimension_43, dimension_44, dimension_45, before_sale_unit, create_date_time_now)
                    VALUES ('$ignore_sync', '$is_lock_record', '$ic_code', '$formular', '$po_over', '$so_over', '$account_group', '$serial_number', '$tax_import', '$tax_rate', '$purchase_manager', '$sale_manager', '$start_purchase_wh', '$start_purchase_shelf', '$start_purchase_unit', '$start_sale_wh', '$start_sale_shelf', '$start_sale_unit', '$cost_produce', '$cost_standard', '$unit_for_stock', '$ic_out_wh', '$ic_out_shelf', '$ic_reserve_wh', '$reserve_status', '$discount', '$purchase_point', '$unit_2_code', '$unit_2_qty', '$unit_2_average', '$unit_2_average_value', '$user_group_for_purchase', '$user_group_for_sale', '$user_group_for_manage', '$user_group_for_warehouse', '$user_status', '$close_reason', null, '$ref_file_1', '$ref_file_2', '$ref_file_3', '$ref_file_4', '$ref_file_5', '$dimension_1', '$dimension_2', '$dimension_3', '$dimension_4', '$dimension_5', '$dimension_6', '$dimension_7', '$dimension_8', '$dimension_9', '$dimension_10', '$sale_price_1', '$sale_price_2', '$sale_price_3', '$sale_price_4', '$maximum_qty', '$minimum_qty', '$dimension_11', '$dimension_12', '$dimension_13', '$dimension_14', '$dimension_15', '$dimension_16', '$dimension_17', '$dimension_18', '$dimension_19', '$dimension_20', '$accrued_control', '$lock_price', '$lock_discount', '$lock_cost', '$is_end', '$is_hold_purchase', '$is_hold_sale', '$is_stop', '$balance_control', '$have_point', '$start_unit_code', '$dimension_21', '$dimension_22', '$dimension_23', '$dimension_24', '$dimension_25', '$is_premium', '$dimension_26', '$dimension_27', '$dimension_28', '$dimension_29', '$dimension_30', '$dimension_31', '$dimension_32', '$dimension_33', '$dimension_34', '$dimension_35', '$dimension_36', '$dimension_37', '$dimension_38', '$dimension_39', '$dimension_40', '$dimension_41', '$dimension_42', '$dimension_43', '$dimension_44', '$dimension_45', '$before_sale_unit', '$create_date_time_now');";
                $insert_inventory_detail_pp = DB::connection('pgsql_pp')->insert($sql_detial);
                if ($insert_inventory_detail_pp) {
                    $load_unit = DB::select("SELECT ignore_sync, is_lock_record, roworder, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now, pi_no
                    FROM public.ic_unit_use WHERE pi_no = ?", [$value->pi_no]);

                    foreach ($load_unit as $key => $unit_value) {
                        $ignore_sync = $unit_value->ignore_sync; $is_lock_record = $unit_value->is_lock_record; $code = $unit_value->code; $line_number = $unit_value->line_number; $stand_value = $unit_value->stand_value; $divide_value = $unit_value->divide_value; $ratio = $unit_value->ratio; $row_order = $unit_value->row_order; $width_length_height = $unit_value->width_length_height; $ic_code = $unit_value->ic_code; $remark = $unit_value->remark; $weight = $unit_value->weight; $status = $unit_value->status; $unit_size = $unit_value->unit_size;
                        $create_date_time_now = date('Y-m-d H:i:s');
                        $sql = "INSERT INTO public.ic_unit_use(
                            ignore_sync, is_lock_record, code, line_number, stand_value, divide_value, ratio, row_order, width_length_height, ic_code, remark, weight, status, unit_size, create_date_time_now)
                            VALUES ('$ignore_sync', '$is_lock_record', '$code', '$line_number', '$stand_value', '$divide_value', '$ratio', '$row_order', '$width_length_height', '$ic_code', '$remark', '$weight', '$status', '$unit_size', '$create_date_time_now');";
                        $sql_use = DB::connection('pgsql_pp')->insert($sql);

                        if($sql_use){
                            $wh = DB::connection('pgsql_pp')->select("select code,whcode FROM ic_shelf");
                            foreach($wh as $key => $item){
                                DB::connection('pgsql_pp')->INSERT("INSERT INTO ic_wh_shelf(wh_code,shelf_code,ic_code,status)values('$item->whcode','$item->code','$unit_value->ic_code',1)");
                            }
                        }
                    }
                }
            }

        }

        $up_date = date('Y-m-d H:i:s');
        $check_purchasing = DB::update("UPDATE public.ic_purchasing_inventory SET up_date=?, ch_status=5, uploader = ? WHERE doc_no=?", [$up_date, auth()->user()->emp_id, $doc_no]);
        if ($check_purchasing) {
            line::send('ອັບຂື້ນລະບົບໃຫ້ແລ້ວເດີ :'. $doc_no);
            return 'success';
        }
    }
}
?>
